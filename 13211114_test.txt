const char C_1 = 'W', C_2 = 'T', C_3 = 'L';
int a_sort [10];
int mod (int x, int y) {
	int z;
	z = x / y;
	return (x - y * z);
}
int gcd (int x, int y) {
	if (x < y)
		return (gcd (y, x));
	if (y == 0)
		return (x);
	return (gcd (y, mod (x, y)));
}
int pow (int x, int y) {
	int i, res;
	i = 0;
	res = 1;
	while (i < y) {
		res = res * x; 
		i = i + 1;
	}
	return (res);
} 
void sort () {
	int i, j, temp;
	i = 9;
	while (i > 0) {
		j = 0;
		while (j < i) {
			if (a_sort[j] > a_sort[j + 1]) {
				temp = a_sort[j];
				a_sort[j] = a_sort[j + 1];
				a_sort[j + 1] = temp;
			}	
			j = j + 1;
		}
		i = i - 1;
	}
}
void main () {
	int num, i;
	int a_user_1 [10], a_user_2 [10], a_temp [10];
	i = 0;
	while (i <= 19) {
		scanf(num);
		switch (mod (i, 2)) {
			case 0 : a_user_1[i / 2] = num; 
			default : a_user_2[i / 2] = num; 
		}
		i = i + 1;
	}
	i = 0;
	while (i <= 9) {
		a_sort[i] = a_user_1[i];
		i = i + 1;
	}
	sort ();
	i = 0;
	while (i <= 9) {
		a_user_1[i] = a_sort[i];
		a_temp[i] = a_sort[i];
		i = i + 1;
	}
	i = 0;
	while (i <= 9) {
		a_sort[i] = a_user_2[i];
		i = i + 1;
	}
	sort ();
	i = 0;
	while (i <= 9) {
		a_user_2[i] = a_sort[i];
		i = i + 1;
	}
	i = 0;
	while (i <= 9) {
		a_user_1[i] = gcd (pow (a_user_1[i], 2), a_user_2[i]);
		i = i + 1;
	}
	i = 0;
	while (i <= 9) {
		a_user_2[i] = gcd (a_temp[i], pow (a_user_2[i], 2));
		i = i + 1;
	}
	i = 0;
	while (i <= 9) {
		num = a_user_1[i] - a_user_2[i];
		if (num < 0)
			num = -num;
		switch (mod (num, 3)) {
			case 0 : {
				printf("USER1 vs USER2 : ", C_2);
				printf(" at ROUND", i + 1);
				printf("...");
			}
			case 1 : {
				printf("USER1 vs USER2 : ", C_1);
				printf(" at ROUND", i + 1);
				printf("...");
			}
			default : {
				printf("USER1 vs USER2 : ", C_3);
				printf(" at ROUND", i + 1);
				printf("...");
			}
		}
		i = i + 1;
	}

	
}